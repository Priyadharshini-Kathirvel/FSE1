server.port=8081
spring.application.name=tweet-app
#server.error.whitelabel.enabled=false

#SQL Configuration
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://3.82.187.95:3306/tweetapp
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jackson.serialization.fail-on-empty-beans=false
#spring.jpa.show-sql: true

##Prometheus Configuration
#management.endpoints.web.base-path=/actuator
#management.endpoints.web.exposure.include=health,prometheus,metrics
##management.endpoints.web.exposure.include=prometheus
##management.endpoints.web.exposure.include=metrics
#management.endpoint.health.show-details=always
#management.endpoint.metrics.enabled=true
#management.endpoint.prometheus.enabled=true
#
#
##ELK Config
##logging.file=C:/Users/cogjava3013/Documents/Case Study/Code/Component 2/tweetapp/elk/tweet-app-elk.log
#logstash.host=localhost
#logstash.port=5001
#
##Kafka Config
#kafka.server.address = localhost:9092
#kafka.topic.name =tweetapp-topic
#kafka.group.id=tweetapp-consumer-group
##slf4j.log.kafka=OFF
##slf4j.log.org.apache.kafka=OFF
#
##spring.kafka.consumer.group-id=tweetapp-consumer-group
##spring.kafka.consumer.auto-offset-reset=earliest
##spring.kafka.consumer.bootstrap-servers=localhost:9092